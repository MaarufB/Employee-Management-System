<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Browsebtn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        +2/EhKIB6FN71gAAAABJRU5ErkJggg==
</value>
  </data>
</root>